{"ast":null,"code":"var _jsxFileName = \"/Users/clairenicholson/Documents/dictionary-react-app/my-app/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport \"./Dictionary.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelsResponse(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/e\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleDictionResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"What word do you want to look up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleKeywordChange,\n            defaultValue: props.defaultKeyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint\",\n          children: \"suggested words: sunset, wine, yoga, plant...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n\n_s(Dictionary, \"TT3J1uaojU+t1KTPqOCWlvWuEBk=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/clairenicholson/Documents/dictionary-react-app/my-app/src/Dictionary.js"],"names":["React","useState","axios","Results","Photos","Dictionary","props","keyword","setKeyword","defaultKeyword","results","setResults","loaded","setLoaded","photos","setPhotos","handleDictionResponse","response","data","handlePexelsResponse","search","apiUrl","get","then","handleSubmit","event","preventDefault","handleKeywordChange","target","value","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACK,KAAK,CAACG,cAAP,CAApC;AACA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASe,qBAAT,CAA+BC,QAA/B,EAAyC;AACvCN,IAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACD;;AAED,WAASC,oBAAT,CAA8BF,QAA9B,EAAwC;AACtCF,IAAAA,SAAS,CAACE,QAAQ,CAACC,IAAT,CAAcJ,MAAf,CAAT;AACD;;AAED,WAASM,MAAT,GAAkB;AAChB;AACA,QAAIC,MAAM,GAAI,sDAAqDd,OAAQ,EAA3E;AACAL,IAAAA,KAAK,CAACoB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBP,qBAAvB;AACD;;AAED,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,MAAM;AACP;;AAED,WAASO,mBAAT,CAA6BF,KAA7B,EAAoC;AAClCjB,IAAAA,UAAU,CAACiB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD;;AAED,WAASC,IAAT,GAAgB;AACdjB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,IAAAA,MAAM;AACP;;AAED,MAAIR,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEY,YAAhB;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,EAAEG,mBAFZ;AAGE,YAAA,YAAY,EAAErB,KAAK,CAACG;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GApBD,MAoBO;AACLgB,IAAAA,IAAI;AACJ,WAAO,SAAP;AACD;AACF;;GA1DuBzB,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport \"./Dictionary.css\";\n\nexport default function Dictionary(props) {\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelsResponse(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/e\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleDictionResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Dictionary\">\n        <section>\n          <h1>What word do you want to look up?</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              onChange={handleKeywordChange}\n              defaultValue={props.defaultKeyword}\n            />\n          </form>\n          <div className=\"hint\">\n            suggested words: sunset, wine, yoga, plant...\n          </div>\n        </section>\n        <Results results={results} />\n        <Photos photos={photos} />\n      </div>\n    );\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}