{"ast":null,"code":"var _jsxFileName = \"/Users/clairenicholson/Documents/dictionary-react-app/my-app/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/e\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleDictionResponse);\n\n    function handleSubmit(event) {\n      event.preventDefault();\n      search();\n    }\n\n    function handleKeywordChange(event) {\n      setKeyword(event.target.value);\n    }\n\n    function load() {\n      setLoaded(true);\n      search();\n    }\n\n    if (loaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dictionary\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"What word do you want to look up?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              onChange: handleKeywordChange,\n              defaultValue: props.defaultKeyword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint\",\n            children: \"suggested words: sunset, wine, yoga, plant...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Results, {\n          results: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    } else {\n      load();\n      return \"Loading\";\n    }\n  }\n}\n\n_s(Dictionary, \"qW6ViZ5zkoUwTkHWKzwP6zJT7js=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/clairenicholson/Documents/dictionary-react-app/my-app/src/Dictionary.js"],"names":["React","useState","axios","Results","Dictionary","props","keyword","setKeyword","defaultKeyword","results","setResults","loaded","setLoaded","handleDictionResponse","response","data","search","apiUrl","get","then","handleSubmit","event","preventDefault","handleKeywordChange","target","value","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAK,CAACG,cAAP,CAApC;AACA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASY,qBAAT,CAA+BC,QAA/B,EAAyC;AACvCJ,IAAAA,UAAU,CAACI,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACD;;AAED,WAASC,MAAT,GAAkB;AAChB;AACA,QAAIC,MAAM,GAAI,sDAAqDX,OAAQ,EAA3E;AACAJ,IAAAA,KAAK,CAACgB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBN,qBAAvB;;AAEA,aAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACAN,MAAAA,MAAM;AACP;;AAED,aAASO,mBAAT,CAA6BF,KAA7B,EAAoC;AAClCd,MAAAA,UAAU,CAACc,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD;;AAED,aAASC,IAAT,GAAgB;AACdd,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,MAAAA,MAAM;AACP;;AAED,QAAIL,MAAJ,EAAY;AACV,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,QAAQ,EAAES,YAAhB;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,QAAQ,EAAEG,mBAFZ;AAGE,cAAA,YAAY,EAAElB,KAAK,CAACG;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD,KAnBD,MAmBO;AACLiB,MAAAA,IAAI;AACJ,aAAO,SAAP;AACD;AACF;AACF;;GApDuBtB,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\n\nexport default function Dictionary(props) {\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/e\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleDictionResponse);\n\n    function handleSubmit(event) {\n      event.preventDefault();\n      search();\n    }\n\n    function handleKeywordChange(event) {\n      setKeyword(event.target.value);\n    }\n\n    function load() {\n      setLoaded(true);\n      search();\n    }\n\n    if (loaded) {\n      return (\n        <div className=\"Dictionary\">\n          <section>\n            <h1>What word do you want to look up?</h1>\n            <form onSubmit={handleSubmit}>\n              <input\n                type=\"search\"\n                onChange={handleKeywordChange}\n                defaultValue={props.defaultKeyword}\n              />\n            </form>\n            <div className=\"hint\">\n              suggested words: sunset, wine, yoga, plant...\n            </div>\n          </section>\n          <Results results={results} />\n        </div>\n      );\n    } else {\n      load();\n      return \"Loading\";\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}