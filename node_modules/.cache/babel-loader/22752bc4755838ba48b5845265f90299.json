{"ast":null,"code":"var _jsxFileName = \"/Users/clairenicholson/Documents/dictionary-react-app/my-app/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [keyword, setKeyword] = useState(\" \");\n  let [loaded, setLoaded] = useState(false);\n  let [results, setResults] = useState(null);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function search(event) {\n    let apiURL = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiURL).then(handleDictionResponse);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Search for a word\",\n            autoFocus: \"on\",\n            onChange: handleKeywordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Results, {\n              results: results\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"Loading...\";\n  }\n}\n\n_s(Dictionary, \"BBv/FhUVtxDhIg3i84nN1p+Y+LU=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/clairenicholson/Documents/dictionary-react-app/my-app/src/Dictionary.js"],"names":["React","useState","axios","Results","Dictionary","props","keyword","setKeyword","loaded","setLoaded","results","setResults","handleDictionResponse","response","data","handleKeywordChange","event","target","value","handleSubmit","preventDefault","search","apiURL","get","then","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,GAAD,CAApC;AACA,MAAI,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,WAASW,qBAAT,CAA+BC,QAA/B,EAAyC;AACvCF,IAAAA,UAAU,CAACE,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACD;;AAED,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClCT,IAAAA,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD;;AAED,WAASC,YAAT,CAAsBH,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACI,cAAN;AACAC,IAAAA,MAAM;AACP;;AAED,WAASA,MAAT,CAAgBL,KAAhB,EAAuB;AACrB,QAAIM,MAAM,GAAI,sDAAqDhB,OAAQ,EAA3E;AACAJ,IAAAA,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBZ,qBAAvB;AACD;;AAED,WAASa,IAAT,GAAgB;AACdhB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAY,IAAAA,MAAM;AACP;;AACD,MAAIb,MAAJ,EAAY;AACV,wBACE;AAAM,MAAA,QAAQ,EAAEW,YAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,WAAW,EAAC,mBAFd;AAGE,YAAA,SAAS,EAAC,IAHZ;AAIE,YAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,OAAO,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACLe,IAAAA,IAAI;AACJ,WAAO,YAAP;AACD;AACF;;GAjDuBrB,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\n\nexport default function Dictionary(props) {\n  let [keyword, setKeyword] = useState(\" \");\n  let [loaded, setLoaded] = useState(false);\n  let [results, setResults] = useState(null);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function search(event) {\n    let apiURL = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiURL).then(handleDictionResponse);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return (\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <input\n              type=\"search\"\n              placeholder=\"Search for a word\"\n              autoFocus=\"on\"\n              onChange={handleKeywordChange}\n            />\n            <div>\n              <Results results={results} />\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  } else {\n    load();\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}